from flask import Flask, request, url_for, redirect, render_template, abort, flash
app = Flask(__name__)

app.secret_key = 'jesus1804'

from datetime import datetime
import mysql.connector

#IMPORTAR EL CONECTOR DE MYSQL
import mysql.connector

#CONECTAR LA BD
midb = mysql.connector.connect(    
    host='localhost',
    user='JepeJepe',
    password='EPEJjesus4081',
    database='prueba'
    ) 

cursor = midb.cursor(dictionary=True) #Le indica al sistema que convierta la tabla en un diccionario en vez de una tupla

sql_listar="""
SELECT 
    idg, 
    monto, 
    cuenta, 
    detalle, 
    DATE_FORMAT(fecha, '%d/%m/%y') AS f_f 
FROM 
    appg01;
"""

@app.route('/')
def index():
    #return 'segundo mensaje de la app Gastos 01'
    return render_template('plantilla.html')

#@app.route('/ingreso')
#def ingreso():
#    return render_template('registro.html')

@app.route('/mensaje', methods=['GET'])
def mensaje():
    return render_template('mensaje.html', mensaje='Hola Jepecito')


@app.route('/revision')
def revision():
    #cursor.execute('select * from appg01')
    cursor.execute(sql_listar, )
    #cursor.execute("SELECT idg, monto, cuenta, detalle, fecha AS f_f FROM appg01;")
    rows=cursor.fetchall()
    
    cursor.execute("SELECT idg, fecha, monto, cuenta, detalle FROM appg01")
    registros = cursor.fetchall()
    
    cursor.execute("SELECT SUM(monto) AS total_monto FROM appg01")
    total_monto = cursor.fetchone()['total_monto']
    
    return render_template('review.html', gastos=rows, registros=registros, total_monto=total_monto)
    #return render_template('mensaje.html', mensaje="Ingresar a la página de listado de gastos")
#Página conectada a la base de datos prueba


@app.route('/labd', methods=['GET', 'POST'])
def labd():
    #cursor.execute('select * from appg01')
    cursor.execute(sql_listar, )
    rows = cursor.fetchall() #Se graban los registros de 'usuario' en una variable
    
    cursor.execute("SELECT idg, fecha, monto, cuenta, detalle FROM appg01")
    registros = cursor.fetchall()
    
    cursor.execute("SELECT SUM(monto) AS total_monto FROM appg01")
    total_monto = cursor.fetchone()['total_monto']
    
    #print(gastos) #No se por qué es necesario este print, pero si no se lo pone, no carga el diccionario... :(
    return render_template ('review.html', gastos=rows, registros=registros, total_monto=total_monto)

#CREAR NUEVOS REGISTROS
@app.route('/ingreso', methods=['GET', 'POST'])
def ingreso():
    if request.method == "POST":
        #fecha_formulario = request.form['fecha']
        #fecha_formateada =datetime.strptime(fecha_formulario, '%d/%m/%y').strftime('%Y-%m-%d')
        #fecha = fecha_formateada
        fecha = request.form['fecha']
        monto = request.form['monto'] 
        cuenta = request.form['cuenta']
        detalle = request.form['detalle']
        sql = "insert into appg01 (fecha, monto, cuenta, detalle) values (%s, %s, %s, %s)"
        values = (fecha, monto, cuenta, detalle)
        
        cursor.execute (sql, values)
        midb.commit()    
        
        return redirect(url_for('labd')) #una vez cargados los datos envía a revisión del listado total con el nuevo registro
    
    return render_template('registro.html') # return es un comando que envía una respuesta HTML puede ser una cadena de texto o una acción

#MODIFICAR | EDITAR un registro con su ID

@app.route('/editar/<int:idg>', methods=['GET', 'POST'])
def editar_registro(idg):
#    midb = mysql.connector.connect(**db_config)
    cursor = midb.cursor(dictionary=True)
    
    if request.method == 'POST':
        # Recoge los datos del formulario
        #AMA#fecha_formulario = request.form['fecha']
        #AMA#fecha_formateada = datetime.strptime(fecha_formulario, '%d/%m/%y').strftime('%Y-%m-%d')
        #AMA#fecha = fecha_formateada
        #print(fecha_formateada.type)
        #registro = cursor.fetchone()
        print('echo 1')
        #if registro:
        fecha = request.form['fecha']
        
        monto = request.form['monto']
        cuenta = request.form['cuenta']
        detalle = request.form['detalle']
            
        # Actualiza el registro en la base de datos
        consulta = """
            UPDATE appg01
            SET fecha = %s, monto = %s, cuenta = %s, detalle = %s
            WHERE idg = %s
        """
        valores = (fecha, monto, cuenta, detalle, idg)
            
        cursor.execute(consulta, valores)
        midb.commit()

        
        return redirect(url_for('labd')) # Envía a revisión de registros
        #else:
        #    print('no se encontró registro')
        #    return redirect(url_for('labd'))    
    
    else:
        # Carga los datos del registro actual
        #cursor.execute("SELECT * FROM appg01 WHERE idg = %s", (idg,))
        #MAAL#cursor.execute("SELECT idg, DATE_FORMAT(fecha, '%d/%m/%y') AS fecha, FORMAT(monto, 2) AS monto, cuenta, detalle FROM appg01 WHERE idg = %s", (idg,))
        cursor.execute("SELECT * FROM appg01 WHERE idg = %s", (idg,))
        registro = cursor.fetchone()
        #cursor.close()
        #midb.close()
        registro['fecha'] = registro['fecha'].strftime('%Y-%m-%d')
        return render_template('editar.html', registro=registro)

@app.route('/borrar/<int:idg>', methods=['GET', 'POST'])
def borrar_registro(idg):
    
    cursor = midb.cursor(dictionary=True)
    if request.method == 'POST':
        # Si el método es POST, se procede a borrar el registro
        consulta = "DELETE FROM appg01 WHERE idg = %s"
        cursor.execute(consulta, (idg,))
        midb.commit()

        return redirect(url_for('labd'))  # Redirige a la página 'labd'
    else:
        cursor.execute("SELECT idg, DATE_FORMAT(fecha, '%d/%m/%y') AS fecha, CAST(FORMAT(monto, 2) AS DOUBLE) AS monto, cuenta, detalle FROM appg01 WHERE idg = %s", (idg,))
        registro = cursor.fetchone()

        return render_template('borrar.html', registro=registro)
    
@app.route('/vermes', methods=['GET', 'POST'])
def vermes():
    cursor.execute(sql_listar, )
    rows = cursor.fetchall() #Se graban los registros de 'usuario' en una variable
    
    cursor.execute("SELECT idg, fecha, monto, cuenta, detalle FROM appg01")
    registros = cursor.fetchall()
    
    cursor.execute("SELECT SUM(monto) AS total_monto FROM appg01")
    total_monto = cursor.fetchone()['total_monto']
    return render_template('pormes.html', gastos=rows, registros=registros, total_monto=total_monto)

@app.route('/resultados.html')
def resultados():
    mes = request.args.get('mes')
    anio = request.args.get('anio')
    
    cursor = midb.cursor(dictionary=True)
    query = """
        SELECT idg, DATE_FORMAT(fecha, '%d/%m/%y') AS f_f, monto, cuenta, detalle 
        FROM appg01 
        WHERE MONTH(fecha) = %s AND YEAR(fecha) = %s
    """
    cursor.execute(query, (mes, anio))
    registros = cursor.fetchall()
    
    # Calcular la suma total de los montos
    total_monto = sum(registro['monto'] for registro in registros)

    return render_template('resultados.html', registros=registros, total_monto=total_monto)


if __name__ == '__main__':
    app.run(debug=True)